<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
    <line>
      <![CDATA[data entered]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="30376" started-at="2018-02-25T15:30:33Z" finished-at="2018-02-25T15:31:04Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="30376" started-at="2018-02-25T15:30:33Z" finished-at="2018-02-25T15:31:04Z">
      <class name="data.POI">
        <test-method status="FAIL" signature="Login()[pri:0, instance:data.POI@1057a39]" name="Login" duration-ms="30165" started-at="2018-02-25T21:00:33Z" finished-at="2018-02-25T21:01:03Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[E:\automation\Book1.xlsx (The process cannot access the file because it is being used by another process)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: E:\automation\Book1.xlsx (The process cannot access the file because it is being used by another process)
	at java.io.FileOutputStream.open0(Native Method)
	at java.io.FileOutputStream.open(Unknown Source)
	at java.io.FileOutputStream.<init>(Unknown Source)
	at java.io.FileOutputStream.<init>(Unknown Source)
	at data.POI.Login(POI.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
            <line>
              <![CDATA[data entered]]>
            </line>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:data.POI@1057a39]" name="afterTest" is-config="true" duration-ms="182" started-at="2018-02-25T21:01:03Z" finished-at="2018-02-25T21:01:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- data.POI -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
